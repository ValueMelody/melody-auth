"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/../web-sdk/dist/requests.js":
/*!***********************************!*\
  !*** ../web-sdk/dist/requests.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.postTokenByRefreshToken = exports.postTokenByAuthCode = exports.postLogout = exports.getUserInfo = exports.getAuthorize = void 0;\nvar getAuthorize = function(_a, _b) {\n    return __awaiter(void 0, [\n        _a,\n        _b\n    ], void 0, function(_c, _d) {\n        var combinedScopes, scopeQueries, url, res, data;\n        var baseUri = _c.baseUri, clientId = _c.clientId, _e = _c.scopes, scopes = _e === void 0 ? [] : _e, redirectUri = _c.redirectUri, setIsLoading = _c.setIsLoading;\n        var state = _d.state, codeChallenge = _d.codeChallenge;\n        return __generator(this, function(_f) {\n            switch(_f.label){\n                case 0:\n                    combinedScopes = __spreadArray(__spreadArray([], scopes, true), [\n                        \"openid\",\n                        \"profile\",\n                        \"offline_access\"\n                    ], false);\n                    scopeQueries = combinedScopes.reduce(function(scopeQueries, scope) {\n                        return \"\".concat(scopeQueries, \"&scope=\").concat(scope);\n                    }, \"\");\n                    url = baseUri + \"/oauth2/authorize?response_type=code&state=\" + state + \"&client_id=\" + clientId + \"&redirect_uri=\" + redirectUri + \"&code_challenge=\" + codeChallenge + \"&code_challenge_type=S256\" + scopeQueries;\n                    setIsLoading(true);\n                    return [\n                        4 /*yield*/ ,\n                        fetch(url, {\n                            method: \"GET\"\n                        })\n                    ];\n                case 1:\n                    res = _f.sent();\n                    return [\n                        4 /*yield*/ ,\n                        res.json()\n                    ];\n                case 2:\n                    data = _f.sent();\n                    console.log(data);\n                    console.log(res);\n                    setIsLoading(false);\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n};\nexports.getAuthorize = getAuthorize;\nvar getUserInfo = function(_a, _b) {\n    return __awaiter(void 0, [\n        _a,\n        _b\n    ], void 0, function(_c, _d) {\n        var url, res, data;\n        var baseUri = _c.baseUri, setIsLoading = _c.setIsLoading;\n        var accessToken = _d.accessToken;\n        return __generator(this, function(_e) {\n            switch(_e.label){\n                case 0:\n                    url = \"\".concat(baseUri, \"/oauth2/userinfo\");\n                    setIsLoading(true);\n                    return [\n                        4 /*yield*/ ,\n                        fetch(url, {\n                            method: \"GET\",\n                            headers: {\n                                Authorization: \"Bearer \".concat(accessToken)\n                            }\n                        })\n                    ];\n                case 1:\n                    res = _e.sent();\n                    return [\n                        4 /*yield*/ ,\n                        res.json()\n                    ];\n                case 2:\n                    data = _e.sent();\n                    setIsLoading(false);\n                    return [\n                        2 /*return*/ ,\n                        data\n                    ];\n            }\n        });\n    });\n};\nexports.getUserInfo = getUserInfo;\nvar postLogout = function(_a, _b) {\n    return __awaiter(void 0, [\n        _a,\n        _b\n    ], void 0, function(_c, _d) {\n        var url, data, urlEncodedData;\n        var baseUri = _c.baseUri, setIsLoading = _c.setIsLoading;\n        var refreshToken = _d.refreshToken, postLogoutRedirectUri = _d.postLogoutRedirectUri;\n        return __generator(this, function(_e) {\n            switch(_e.label){\n                case 0:\n                    url = \"\".concat(baseUri, \"/oauth2/logout\");\n                    data = {\n                        refreshToken: refreshToken,\n                        postLogoutRedirectUri: postLogoutRedirectUri\n                    };\n                    urlEncodedData = new URLSearchParams(data).toString();\n                    setIsLoading(true);\n                    return [\n                        4 /*yield*/ ,\n                        fetch(url, {\n                            method: \"POST\",\n                            body: urlEncodedData\n                        })\n                    ];\n                case 1:\n                    _e.sent();\n                    setIsLoading(false);\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n};\nexports.postLogout = postLogout;\nvar postTokenByAuthCode = function(_a, _b) {\n    return __awaiter(void 0, [\n        _a,\n        _b\n    ], void 0, function(_c, _d) {\n        var url, body, urlEncodedData, res, data;\n        var baseUri = _c.baseUri, setIsLoading = _c.setIsLoading, redirectUri = _c.redirectUri;\n        var code = _d.code, codeVerifier = _d.codeVerifier;\n        return __generator(this, function(_e) {\n            switch(_e.label){\n                case 0:\n                    url = \"\".concat(baseUri, \"/oauth2/token\");\n                    body = {\n                        grant_type: \"authorization_code\",\n                        code: code,\n                        redirect_uri: redirectUri,\n                        code_verifier: codeVerifier\n                    };\n                    urlEncodedData = new URLSearchParams(body).toString();\n                    setIsLoading(true);\n                    return [\n                        4 /*yield*/ ,\n                        fetch(url, {\n                            method: \"POST\",\n                            body: urlEncodedData\n                        })\n                    ];\n                case 1:\n                    res = _e.sent();\n                    return [\n                        4 /*yield*/ ,\n                        res.json()\n                    ];\n                case 2:\n                    data = _e.sent();\n                    setIsLoading(false);\n                    return [\n                        2 /*return*/ ,\n                        data\n                    ];\n            }\n        });\n    });\n};\nexports.postTokenByAuthCode = postTokenByAuthCode;\nvar postTokenByRefreshToken = function(_a, _b) {\n    return __awaiter(void 0, [\n        _a,\n        _b\n    ], void 0, function(_c, _d) {\n        var url, body, urlEncodedData, res, data;\n        var baseUri = _c.baseUri, setIsLoading = _c.setIsLoading;\n        var refreshToken = _d.refreshToken;\n        return __generator(this, function(_e) {\n            switch(_e.label){\n                case 0:\n                    url = \"\".concat(baseUri, \"/oauth2/token\");\n                    body = {\n                        grant_type: \"refresh_token\",\n                        refreshToken: refreshToken\n                    };\n                    urlEncodedData = new URLSearchParams(body).toString();\n                    setIsLoading(true);\n                    return [\n                        4 /*yield*/ ,\n                        fetch(url, {\n                            method: \"POST\",\n                            body: urlEncodedData\n                        })\n                    ];\n                case 1:\n                    res = _e.sent();\n                    return [\n                        4 /*yield*/ ,\n                        res.json()\n                    ];\n                case 2:\n                    data = _e.sent();\n                    setIsLoading(false);\n                    return [\n                        2 /*return*/ ,\n                        data\n                    ];\n            }\n        });\n    });\n};\nexports.postTokenByRefreshToken = postTokenByRefreshToken;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../web-sdk/dist/requests.js\n"));

/***/ })

});