export enum ConfigError {
  NotSupposeToSendEmailMfa = 'An email mfa request triggered but the system is not supposed to send email mfa based on current setup',
  NotSupposeToSendSmsMfa = 'An sms mfa request triggered but the system is not supposed to send sms mfa based on current setup',
  SignUpNotEnabled = 'Sign up is not enabled or passwordless sign in is enabled',
  PasswordSignInNotEnabled = 'Password sign in is not enabled or passwordless sign in is enabled',
  PasswordResetNotEnabled = 'Password reset is not enabled or passwordless sign in is enabled',
  PasswordlessSignInNotEnabled = 'Passwordless sign in is not enabled',
  AppConsentNotEnabled = 'App consent is not enabled',
  OrgNotEnabled = 'Organization is not enabled',
  UserAttributeNotEnabled = 'User attribute is not enabled',
  PasskeyEnrollmentNotEnabled = 'Passkey enrollment is not enabled or passwordless sign in is enabled',
  GoogleSignInNotEnabled = 'Google id is not configured',
  FacebookSignInNotEnabled = 'Facebook id or secret is not configured',
  GithubSignInNotEnabled = 'Github id, secret or app name is not configured',
  DiscordSignInNotEnabled = 'Discord id or secret is not configured',
  AppleSignInNotEnabled = 'Apple id or secret is not configured',
  OidcProviderNotEnabled = 'OIDC provider is not configured properly',
  EmailVerificationNotEnabled = 'Email verification is not enabled',
  MfaEnrollNotEnabled = 'MFA enrollment method list is empty or specific MFA method has been set to required',
  ChangePasswordPolicyNotEnabled = 'Change password policy is not enabled or password reset is not enabled',
  ChangeEmailPolicyNotEnabled = 'Change email policy is not enabled or email verification is not enabled',
  ResetMfaPolicyNotEnabled = 'Reset MFA policy is not enabled',
  ManagePasskeyPolicyNotEnabled = 'Manage passkey policy is not enabled or passkey enrollment is not enabled',
  UpdateInfoPolicyNotEnabled = 'Update info policy is not enabled or user names are not enabled',
  EmbeddedAuthFeatureNotEnabled = 'Embedded auth feature is not enabled',
  SamlSpNotEnabled = 'SAML SP feature is not enabled',
  NoSpSecret = 'SAML SP secret is not configured',
  NoSmsSender = 'A sms request triggered but no sms sender is configured',
  NoEmailSender = 'An email request triggered but no email sender is configured',
  NoSessionSecret = 'Session secret is not configured',
  NoJwtPrivateSecret = 'JWT private secret is not configured',
  NoJwtPublicSecret = 'JWT public secret is not configured',
}

export enum RequestError {
  NotSpaTypeApp = 'A SPA request sent to a non-SPA app',
  NotS2sTypeApp = 'A S2S request sent to a non-S2S app',
  WrongS2sClientSecret = 'Wrong S2S client secret provided',
  WrongOrigin = 'Request from unexpected origin',
  WrongRedirectUri = 'Invalid redirect_uri provided',
  WrongGrantType = 'Invalid grant_type provided',
  WrongCodeVerifier = 'Invalid code_verifier provided',
  WrongRefreshToken = 'Invalid refresh_token provided',
  WrongTokenTypeHint = 'Invalid token_type_hint provided',
  WrongAccessToken = 'Invalid access_token provided',
  WrongAuthCode = 'Invalid auth code provided',
  WrongSessionId = 'Invalid session id provided',
  WrongCode = 'Invalid code provided',
  WrongChangeEmailCode = 'Invalid change email code provided',
  WrongEmailVerificationCode = 'Invalid email verification code provided',
  WrongPasswordResetCode = 'Invalid password reset code provided',
  InvalidGithubAuthorizeRequest = 'Invalid github authorize request',
  InvalidDiscordAuthorizeRequest = 'Invalid discord authorize request',
  InvalidAppleAuthorizeRequest = 'Invalid apple authorize request',
  InvalidOidcAuthorizeRequest = 'Invalid oidc authorize request',
  WrongMfaCode = 'Invalid MFA code provided',
  WrongEmailMfaCode = 'Invalid email MFA code provided',
  WrongSmsMfaCode = 'Invalid SMS MFA code provided',
  WrongOtpMfaCode = 'Invalid OTP MFA code provided',
  WrongPasswordlessCode = 'Invalid passwordless code provided',
  RequireDifferentPassword = 'A change password request triggered but the new password is the same as the old password',
  RequireDifferentEmail = 'A change email request triggered but the new email address is the same as the old email address',
  NoSpaAppFound = 'No SPA app found',
  NoS2sAppFound = 'No S2S app found',
  SpaAppDisabled = 'A request to a SPA app was made but the app is disabled',
  S2sAppDisabled = 'A request to a S2S app was made but the app is disabled',
  NoUser = 'No user found',
  NoGoogleUser = 'No google user found',
  NoFacebookUser = 'No facebook user found',
  NoGithubUser = 'No github user found',
  NoDiscordUser = 'No discord user found',
  NoAppleUser = 'No apple user found',
  NoOidcUser = 'No oidc user found',
  NoOrg = 'No organization found',
  NoSamlIdp = 'No SAML IDP found',
  InvalidSamlResponse = 'Invalid SAML response',
  InvalidPolicy = 'Invalid policy',
  NoUserAttribute = 'No user attribute found',
  OrgHasUsers = 'Can not delete organization with users',
  UserDisabled = 'Try to access a disabled account',
  SmsMfaNotSetup = 'SMS MFA is not setup',
  EmailTaken = 'The email address is already in use',
  EmailAlreadyVerified = 'Email already verified',
  PasskeyNotFound = 'No passkey found',
  InvalidPasskeyEnrollRequest = 'Invalid passkey enroll request',
  InvalidPasskeyVerifyRequest = 'Invalid passkey verify request',
  PasswordlessNotVerified = 'Passwordless code not verified',
  MfaNotVerified = 'Try to exchange token while MFA code is not verified',
  MfaEnrolled = 'User already enrolled with MFA',
  OtpAlreadySet = 'OTP authentication already set',
  UserAlreadyLinked = 'This account has already been linked with one account',
  TargetUserAlreadyLinked = 'Target account has already been linked with one account',
  NoConsent = 'User consent required',
  SocialAccountNotSupported = 'Policies is unavailable for social login accounts.',
  AccountLocked = 'Account temporarily locked due to excessive login failures',
  OtpMfaLocked = 'Too many failed OTP verification attempts. Please try again after 30 minutes.',
  SmsMfaLocked = 'Too many SMS verification attempts. Please try again after 30 minutes.',
  EmailMfaLocked = 'Too many Email verification attempts. Please try again after 30 minutes.',
  PasswordResetLocked = 'Too many password reset email requests. Please try again tomorrow.',
  ChangeEmailLocked = 'Too many send email change code requests. Please try again after 30 minutes.',
  UniqueKey = 'Unique key constraint failed',
  UnknownScope = 'Unknown scope',
  impersonatorTokenIsRequired = 'impersonatorToken is required for impersonation',
  impersonatorIsNotSuperAdmin = 'Only super admin can impersonate other users',
  impersonateNonSpaApp = 'Impersonate request sent to a non-SPA app',
  deleteBeforeMustBePresent = 'deleteBefore must be present and in utc format',
  AttributeIsRequired = 'Attribute is required',
}
