import{_ as e,c as d,a as o,o as r}from"./app-BMtGzWFk.js";const a={};function s(l,t){return r(),d("div",null,t[0]||(t[0]=[o(`<h1 id="邮件服务商配置" tabindex="-1"><a class="header-anchor" href="#邮件服务商配置"><span>邮件服务商配置</span></a></h1><p>Melody Auth 依赖邮件服务商来发送密码重置链接、邮箱验证通知以及基于邮箱的 MFA 验证码。您可以根据需求选择并配置 SendGrid、Mailgun、Brevo、Resend、Postmark，或（仅限 Node.js 环境）SMTP。</p><h2 id="支持的邮件服务商" tabindex="-1"><a class="header-anchor" href="#支持的邮件服务商"><span>支持的邮件服务商</span></a></h2><ul><li><strong>Cloudflare Workers 或 Node.js</strong>：SendGrid、Mailgun、Brevo、Resend 和 Postmark</li><li><strong>仅限 Node.js</strong>：SMTP 服务器（除以上服务商外的额外选项）</li></ul><h2 id="设置邮件服务商名称" tabindex="-1"><a class="header-anchor" href="#设置邮件服务商名称"><span>设置邮件服务商名称</span></a></h2><p>在您的 <code>server/wrangler.toml</code> 文件中，设置 <code>EMAIL_PROVIDER_NAME</code> 变量为您的邮件服务商名称。可用选项为 &#39;smtp&#39;, &#39;sendgrid&#39;, &#39;mailgun&#39;, &#39;brevo&#39;, &#39;resend&#39;, &#39;postmark&#39;</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token key property">EMAIL_PROVIDER_NAME</span><span class="token punctuation">=</span><span class="token string">&quot;smtp&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><p>使用下表配置您选择的邮件服务商。某些变量仅在使用特定服务商时为必填（例如 SendGrid）。</p><table><thead><tr><th>变量名</th><th>说明</th><th>示例值</th></tr></thead><tbody><tr><td>ENVIRONMENT</td><td>决定邮件路由行为</td><td>&quot;prod&quot; 或 &quot;dev&quot;</td></tr><tr><td>DEV_EMAIL_RECEIVER</td><td>当 ENVIRONMENT ≠ prod 时，所有邮件都会发送到此地址（仅用于测试）</td><td>&quot;test@example.com&quot;</td></tr><tr><td>SENDGRID_API_KEY</td><td>SendGrid API Key（使用 SendGrid 时必填）</td><td>&quot;SG.xxxxxxxxxxxxxxxxxxxxxxxx&quot;</td></tr><tr><td>SENDGRID_SENDER_ADDRESS</td><td>SendGrid 中已验证的发件人邮箱地址（使用 SendGrid 时必填）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>MAILGUN_API_KEY</td><td>Mailgun API Key（使用 Mailgun 时必填）</td><td>&quot;xxxxxxxxxxxxxxxxxx-xxxxxxxxx&quot;</td></tr><tr><td>MAILGUN_SENDER_ADDRESS</td><td>Mailgun 中已验证的发件人邮箱地址（使用 Mailgun 时必填）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>BREVO_API_KEY</td><td>Brevo API Key（使用 Brevo 时必填）</td><td>&quot;xkeysib-xxxxxxxxxxxxxxxxxxxxxxxx&quot;</td></tr><tr><td>BREVO_SENDER_ADDRESS</td><td>Brevo 中已验证的发件人地址（使用 Brevo 时必填）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>RESEND_API_KEY</td><td>Resend.com API Key（使用 Resend.com 时必填）</td><td>&quot;re_xxxxxxxxxxxxxxxxxxxxxxx&quot;</td></tr><tr><td>RESEND_SENDER_ADDRESS</td><td>Resend.com 中已验证的发件人地址（使用 Resend.com 时必填）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>POSTMARK_API_KEY</td><td>Postmark API Key（使用 Postmark 时必填）</td><td>&quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;</td></tr><tr><td>POSTMARK_SENDER_ADDRESS</td><td>Postmark 中已验证的发件人地址（使用 Postmark 时必填）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>SMTP_SENDER_ADDRESS</td><td>SMTP 发件人邮箱地址（仅限 Node.js）</td><td>&quot;noreply@yourdomain.com&quot;</td></tr><tr><td>SMTP_CONNECTION_STRING</td><td>SMTP 连接字符串（仅限 Node.js）</td><td>&quot;smtp://username:password@smtp.mailserver.com:587&quot;</td></tr></tbody></table><h2 id="生产环境与开发环境差异" tabindex="-1"><a class="header-anchor" href="#生产环境与开发环境差异"><span>生产环境与开发环境差异</span></a></h2><ul><li><p><strong>生产环境（ENVIRONMENT = &quot;prod&quot;）</strong></p><ul><li>邮件会发送到实际用户邮箱。</li><li>适用于正式部署。</li></ul></li><li><p><strong>开发环境（ENVIRONMENT ≠ &quot;prod&quot;）</strong></p><ul><li>所有邮件都会被重定向到 <code>DEV_EMAIL_RECEIVER</code>。</li><li>避免在测试时向真实用户发送邮件。</li></ul></li></ul><h2 id="服务商优先级" tabindex="-1"><a class="header-anchor" href="#服务商优先级"><span>服务商优先级</span></a></h2><ul><li><p>如果 EMAIL_PROVIDER_NAME 设置为有效服务商名称，则使用该服务商发送邮件。</p></li><li><p>如果 EMAIL_PROVIDER_NAME 未设置或设置为无效服务商名称：</p><ul><li><p><strong>Node.js 环境</strong></p><ul><li>如果定义了 <code>SMTP_CONNECTION_STRING</code>，则始终使用 SMTP 发送邮件，而不考虑 SendGrid、Mailgun、Brevo、Resend 或 Postmark 设置。</li><li>否则，如果同时配置了多个 API Key 和发件人地址，将按 SendGrid → Mailgun → Brevo → Resend → Postmark 的顺序选择可用服务商。</li></ul></li><li><p><strong>Cloudflare 环境</strong></p><ul><li>忽略所有 SMTP 设置。</li><li>如果同时配置了多个服务商，将按 SendGrid → Mailgun → Brevo → Resend → Postmark 的顺序选择可用服务商。</li></ul></li></ul></li></ul><h2 id="cloudflare-远程-生产环境配置" tabindex="-1"><a class="header-anchor" href="#cloudflare-远程-生产环境配置"><span>Cloudflare 远程 / 生产环境配置</span></a></h2><ol><li>进入 Cloudflare Dashboard → <strong>Workers &amp; Pages</strong>。</li><li>选择您的 <strong>melody-auth</strong> Worker → <strong>Settings</strong> → <strong>Variables</strong>。</li><li>添加适用于您场景的环境变量。</li><li>点击 <strong>Save and deploy</strong> 使改动立即生效。</li></ol><h2 id="cloudflare-本地-开发或-node-js-环境" tabindex="-1"><a class="header-anchor" href="#cloudflare-本地-开发或-node-js-环境"><span>Cloudflare 本地 / 开发或 Node.js 环境</span></a></h2><ol><li>在 <code>melody-auth/server</code> 目录中，找到或创建 <code>.dev.vars</code> 文件（如有需要，可复制 <code>.dev.vars.example</code>）。</li><li>将适用的环境变量写入 <code>.dev.vars</code>。</li></ol>`,18)]))}const i=e(a,[["render",s]]),x=JSON.parse('{"path":"/zh/email-provider-setup.html","title":"邮件服务商配置","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1755820793000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":2,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"728dac9e27daef1ae31a908e05015063f7b544e3","time":1755820793000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add EMAIL_PROVIDER_NAME var to make email provider config more scalable (#432)"},{"hash":"1f6a42a6b45fdfb25e862e4b91e0a9988ee80459","time":1748744819000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add docs in CN (#378)"}]},"filePathRelative":"zh/email-provider-setup.md"}');export{i as comp,x as data};
