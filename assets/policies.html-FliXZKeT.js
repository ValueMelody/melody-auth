import{_ as a,c as e,a as n,o}from"./app-DfmhbpA5.js";const i={};function t(l,s){return o(),e("div",null,s[0]||(s[0]=[n(`<h1 id="how-to-trigger-a-different-policy" tabindex="-1"><a class="header-anchor" href="#how-to-trigger-a-different-policy"><span>How to trigger a different policy</span></a></h1><p>Policies let you route users to different authorization experiences (e.g., update info, change password) without changing your application logic.</p><h2 id="ways-to-trigger-a-policy" tabindex="-1"><a class="header-anchor" href="#ways-to-trigger-a-policy"><span>Ways to trigger a policy</span></a></h2><ul><li><p>Using the authorize URL (query string)</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> url <span class="token operator">=</span> serverUri <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;/oauth2/v1/authorize?&#39;</span> <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;response_type=code&#39;</span> <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;state=&#39;</span> <span class="token operator">+</span> state <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;client_id=&#39;</span> <span class="token operator">+</span> clientId <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;redirect_uri=&#39;</span> <span class="token operator">+</span> redirectUri <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;code_challenge=&#39;</span> <span class="token operator">+</span> codeChallenge <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;code_challenge_method=S256&#39;</span> <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;policy=&#39;</span> <span class="token operator">+</span> policy <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;scope=&#39;</span> <span class="token operator">+</span> scope <span class="token operator">+</span></span>
<span class="line">  <span class="token string">&#39;&amp;locale=&#39;</span> <span class="token operator">+</span> locale</span>
<span class="line">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> url</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Using the Frontend SDK</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> loginRedirect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">loginRedirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  policy<span class="token operator">:</span> <span class="token string">&#39;change_password&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>Note: All front-end SDKs that expose <code>loginRedirect</code> accept an optional <code>policy</code> parameter. If omitted, the default policy applies.</p><h2 id="supported-policies" tabindex="-1"><a class="header-anchor" href="#supported-policies"><span>Supported policies</span></a></h2><ul><li><code>sign_in_or_sign_up</code>: Default policy.</li><li><code>update_info</code>: Allows users to update their information.</li><li><code>change_password</code>: Allows users to change their password (for password-based users only). Requires <code>ENABLE_PASSWORD_RESET=true</code>.</li><li><code>change_email</code>: Allows users to change their email address (for password-based users only). Requires <code>ENABLE_EMAIL_VERIFICATION=true</code>.</li><li><code>reset_mfa</code>: Allows users to reset their enrolled MFA (Multi-Factor Authentication) method.</li><li><code>manage_passkey</code>: Allows users to manage their passkey. Requires <code>ALLOW_PASSKEY_ENROLLMENT=true</code>.</li><li><code>manage_recovery_code</code>: Allows users to manage their recovery code.</li><li><code>saml_sso_[idp_name]</code>: Allows users to sign in via SAML SSO.</li><li><code>oidc_sso_[provider_name]</code>: Allows users to sign in via OIDC SSO.</li></ul><h2 id="notes-and-best-practices" tabindex="-1"><a class="header-anchor" href="#notes-and-best-practices"><span>Notes and best practices</span></a></h2><ul><li>If a policy requires a disabled feature, the authorization request will not proceed. Enable the required feature flags first.</li><li>You can combine <code>policy</code> with other query params like <code>org</code> and <code>locale</code> when applicable.</li></ul>`,9)]))}const c=a(i,[["render",t]]),r=JSON.parse('{"path":"/policies.html","title":"How to trigger a different policy","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754954867000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"8072502fc071765c4d8e2ab6e797919d78d7c086","time":1754954867000,"email":"byn9826@gmail.com","author":"Baozier","message":"Regroup docs (#420)"}]},"filePathRelative":"policies.md"}');export{c as comp,r as data};
