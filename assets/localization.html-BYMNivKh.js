import{_ as s,c as a,a as e,o as t}from"./app-DfmhbpA5.js";const p={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="语言本地化-localization" tabindex="-1"><a class="header-anchor" href="#语言本地化-localization"><span>语言本地化（Localization）</span></a></h1><p>本指南解释了如何在 Melody Auth 中为身份页面和邮件模板添加和使用新的语言。</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>默认语言：<code>en</code> 和 <code>fr</code></li><li>额外支持：<code>zh</code></li><li>你可以通过提供翻译并更新配置来添加更多语言</li></ul><h2 id="为邮件模板添加翻译" tabindex="-1"><a class="header-anchor" href="#为邮件模板添加翻译"><span>为邮件模板添加翻译</span></a></h2><p>在 <code>server/src/configs/locale.ts</code> 中为你的新语言提供翻译。</p><h2 id="为身份页面添加翻译" tabindex="-1"><a class="header-anchor" href="#为身份页面添加翻译"><span>为身份页面添加翻译</span></a></h2><p>你可以在 <code>server/src/pages/tools/locale.ts</code> 中为身份页面添加翻译。</p><h2 id="在服务器配置中允许该语言" tabindex="-1"><a class="header-anchor" href="#在服务器配置中允许该语言"><span>在服务器配置中允许该语言</span></a></h2><p>在 <code>server/wrangler.toml</code> 的 <code>[vars]</code> 中更新 <code>SUPPORTED_LOCALES</code>，这样身份页面和邮件才能使用它。</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">vars</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">SUPPORTED_LOCALES</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;de&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 可选：在身份页面上显示语言切换器</span></span>
<span class="line"><span class="token key property">ENABLE_LOCALE_SELECTOR</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意事项：</p><ul><li>文档中提到的支持语言：[&#39;en&#39;, &#39;fr&#39;, &#39;zh&#39;]</li><li>如果 <code>SUPPORTED_LOCALES</code> 中只包含一种语言，即使 <code>ENABLE_LOCALE_SELECTOR</code> 为 true，切换器也会被隐藏。</li><li>你可以从 <code>SUPPORTED_LOCALES</code> 中移除任意语言以禁用它。</li></ul><h2 id="为不同用户渲染不同语言" tabindex="-1"><a class="header-anchor" href="#为不同用户渲染不同语言"><span>为不同用户渲染不同语言</span></a></h2><p>你可以在通过 SDK 启动认证流程时指定一个语言。示例：</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code class="language-tsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@melody-auth/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">LoginButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> loginRedirect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">loginRedirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span> locale<span class="token operator">:</span> <span class="token string">&#39;de&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      Login (DE)</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16)]))}const i=s(p,[["render",o]]),u=JSON.parse('{"path":"/zh/localization.html","title":"语言本地化（Localization）","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1754954867000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"8072502fc071765c4d8e2ab6e797919d78d7c086","time":1754954867000,"email":"byn9826@gmail.com","author":"Baozier","message":"Regroup docs (#420)"}]},"filePathRelative":"zh/localization.md"}');export{i as comp,u as data};
