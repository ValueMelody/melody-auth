import{_ as s,c as a,a as e,o as t}from"./app-BVdeq8C2.js";const p={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="服务器间认证-api" tabindex="-1"><a class="header-anchor" href="#服务器间认证-api"><span>服务器间认证 API</span></a></h1><p>Melody Auth <strong>服务器间认证 API</strong> 为服务器应用提供管理资源的能力。</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><p>首先，通过在 <code>Basic Auth</code> 头中使用 <code>clientId</code> 和 <code>clientSecret</code>，向 <code>/token</code> 端点获取 <code>access_token</code>。<br> 随后，在后续请求的 <code>Authorization</code> 头中，以 <code>Bearer</code> 令牌的形式携带该 <code>access_token</code>。</p><ul><li><strong>HTTP 方法</strong>：<code>POST</code></li><li><strong>Content-Type</strong>：<code>application/x-www-form-urlencoded</code></li><li><strong>URL</strong>：<code>[melody_auth_server_url]/oauth2/v1/token</code></li></ul><h3 id="token-请求参数" tabindex="-1"><a class="header-anchor" href="#token-请求参数"><span>Token 请求参数</span></a></h3><table><thead><tr><th>参数</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td><code>grant_type</code></td><td>&#39;client_credentials&#39;</td><td>是</td><td>指定使用 <code>client_credentials</code> 模式交换令牌</td></tr><tr><td><code>scope</code></td><td>string</td><td>是</td><td>需要申请的权限作用域（如：<code>read_user write_user</code>）</td></tr></tbody></table><h3 id="token-请求示例" tabindex="-1"><a class="header-anchor" href="#token-请求示例"><span>Token 请求示例</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> credentials <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>clientId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>clientSecret<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> encodedCredentials <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>credentials<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">grant_type</span><span class="token operator">:</span> <span class="token string">&#39;client_credentials&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&#39;read_user write_user&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> urlEncodedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/oauth2/v1/token&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&#39;Content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">basic </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>encodedCredentials<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">body</span><span class="token operator">:</span> urlEncodedData<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="token-响应示例" tabindex="-1"><a class="header-anchor" href="#token-响应示例"><span>Token 响应示例</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyMzQ1NiIsInNjb3BlIjoicmVhZF91c2VyIHdyaXRlX3VzZXIiLCJpYXQiOjE3MjE0MjE4MTcsImV4cCI6MTcyMTQyNTQxN30.blhriLgm67tkL89tVLdeNN5nl4EUssy6FIfp4kTOlqM&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;expires_on&quot;</span><span class="token operator">:</span> <span class="token number">1721425417</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token string">&quot;read_user write_user&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="详细文档" tabindex="-1"><a class="header-anchor" href="#详细文档"><span>详细文档</span></a></h2><p>更多信息请参阅 <a href="https://auth-server.valuemelody.com/api/v1/swagger" target="_blank" rel="noopener noreferrer">REST API Swagger</a>。</p>`,13)]))}const l=s(p,[["render",o]]),r=JSON.parse('{"path":"/zh/s2s-api.html","title":"服务器间认证 API","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1748744819000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"1f6a42a6b45fdfb25e862e4b91e0a9988ee80459","time":1748744819000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add docs in CN (#378)"}]},"filePathRelative":"zh/s2s-api.md"}');export{l as comp,r as data};
