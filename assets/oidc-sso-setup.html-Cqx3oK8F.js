import{_ as s,c as a,a as e,o as t}from"./app-Bs8I1UkO.js";const p={};function o(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="oidc-认证提供商登录" tabindex="-1"><a class="header-anchor" href="#oidc-认证提供商登录"><span>OIDC 认证提供商登录</span></a></h1><p>Melody Auth 支持通过外部 OpenID Connect (OIDC) 身份提供商登录用户，这些提供商需要实现带有 PKCE 的 OAuth 2.0 授权码流程，并返回使用 RS256 签名且通过 JWKS 端点发布的 ID token。</p><p>本指南介绍如何启用 OIDC 提供商、显示登录按钮，以及在前端触发重定向。</p><h2 id="_1-启用一个或多个-oidc-提供商" tabindex="-1"><a class="header-anchor" href="#_1-启用一个或多个-oidc-提供商"><span>1. 启用一个或多个 OIDC 提供商</span></a></h2><ol><li>在 <code>server/wrangler.toml</code> 中，设置要启用的提供商名称列表：</li></ol><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">vars</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">OIDC_AUTH_PROVIDERS</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Auth0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Azure&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>对于该列表中的每个提供商名称，在 <code>server/src/configs/variable.ts</code> 的 <code>OIDCProviderConfigs</code> 中定义其配置：</li></ol><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> OIDCProviderConfigs <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  Auth0<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    clientId<span class="token operator">:</span> <span class="token string">&#39;YOUR_AUTH0_CLIENT_ID&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    authorizeEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://YOUR_DOMAIN.auth0.com/authorize&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    tokenEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://YOUR_DOMAIN.auth0.com/oauth/token&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    jwksEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://YOUR_DOMAIN.auth0.com/.well-known/jwks.json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    enableSignInButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    enableSignInRedirect<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  Azure<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    clientId<span class="token operator">:</span> <span class="token string">&#39;YOUR_AZURE_AD_APP_CLIENT_ID&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    authorizeEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://login.microsoftonline.com/YOUR_TENANT_ID/oauth2/v2.0/authorize&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    tokenEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://login.microsoftonline.com/YOUR_TENANT_ID/oauth2/v2.0/token&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    jwksEndpoint<span class="token operator">:</span> <span class="token string">&#39;https://login.microsoftonline.com/YOUR_TENANT_ID/discovery/v2.0/keys&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    enableSignInButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    enableSignInRedirect<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>clientId</code>：你在提供商处的 OIDC 应用/客户端 ID。</li><li><code>authorizeEndpoint</code>：提供商授权端点。</li><li><code>tokenEndpoint</code>：提供商 token 端点，在交换授权码时必须返回 <code>id_token</code>。</li><li><code>jwksEndpoint</code>：提供商 JWKS URL，用于公开 ID token 的签名密钥。</li><li><code>enableSignInButton</code>：若为 true，则在 Melody Auth 页面上为此提供商显示登录按钮。</li><li><code>enableSignInRedirect</code>：若为 true，则可以通过前端策略触发 OIDC 重定向（见下文）。</li></ul><p>注意：提供商名称区分大小写，配置后应保持不变，因为它们会用于路由和策略。</p><h2 id="_2-在登录页面显示-oidc-登录按钮" tabindex="-1"><a class="header-anchor" href="#_2-在登录页面显示-oidc-登录按钮"><span>2. 在登录页面显示 OIDC 登录按钮</span></a></h2><p>当 <code>OIDC_AUTH_PROVIDERS</code> 中包含某个提供商且其 <code>enableSignInButton</code> 为 true 时，Melody Auth 会渲染一个按钮，将用户重定向到提供商的授权端点，并带上 PKCE challenge。<br> 成功在提供商处登录后，用户将被重定向回：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">[YOUR_AUTH_SERVER_URL]/identity/v1/authorize-oidc/[provider_name]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>确保将该回调/重定向 URL 添加到提供商控制台的允许列表中（每个提供商都需要添加）。例如，对于本地开发环境下名为 <code>Auth0</code> 的提供商：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">http://localhost:8787/identity/v1/authorize-oidc/Auth0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-在前端触发-oidc-重定向-策略" tabindex="-1"><a class="header-anchor" href="#_3-在前端触发-oidc-重定向-策略"><span>3. 在前端触发 OIDC 重定向（策略）</span></a></h2><p>如果某个提供商的 <code>enableSignInRedirect</code> 为 true，则可以在前端 SDK 中传入策略名 <code>oidc_sso_[provider_name]</code> 来触发 OIDC 登录重定向。</p><p>使用 React SDK 的示例：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@melody-auth/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">SignIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> loginRedirect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">signInWithAuth0</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">loginRedirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      policy<span class="token operator">:</span> <span class="token string">&#39;oidc_sso_Auth0&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>signInWithAuth0<span class="token punctuation">}</span><span class="token operator">&gt;</span>Sign <span class="token keyword">in</span> <span class="token keyword">with</span> Auth0<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多详情可参考 Q&amp;A：“如何在前端通过策略触发 OIDC SSO 登录重定向”。</p><h2 id="_4-要求与注意事项" tabindex="-1"><a class="header-anchor" href="#_4-要求与注意事项"><span>4. 要求与注意事项</span></a></h2><ul><li>提供商必须支持带有 PKCE 的授权码模式，并在 token 端点返回 <code>id_token</code>。</li><li>ID token 必须使用 RS256 签名，并可通过配置的 <code>jwksEndpoint</code> 验证。</li><li>服务器会通过 KV 验证 PKCE 的 <code>code_verifier</code> 以防篡改。</li><li>如果你的提供商的 token 响应与标准不同（例如缺少 <code>id_token</code>），可能需要在 <code>server/src/services/jwt.ts</code> 中调整验证逻辑。</li></ul>`,22)]))}const c=s(p,[["render",o]]),r=JSON.parse('{"path":"/zh/oidc-sso-setup.html","title":"OIDC 认证提供商登录","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1754954867000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"8072502fc071765c4d8e2ab6e797919d78d7c086","time":1754954867000,"email":"byn9826@gmail.com","author":"Baozier","message":"Regroup docs (#420)"}]},"filePathRelative":"zh/oidc-sso-setup.md"}');export{c as comp,r as data};
