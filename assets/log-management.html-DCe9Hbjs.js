import{_ as e,c as n,a as s,o as i}from"./app-BMtGzWFk.js";const o={};function l(t,a){return i(),n("div",null,a[0]||(a[0]=[s(`<h1 id="log-management" tabindex="-1"><a class="header-anchor" href="#log-management"><span>Log Management</span></a></h1><p>Melody Auth provides logging capabilities for email, SMS, and sign-in activities. This helps you monitor system activity, troubleshoot issues, and maintain audit trails for security and compliance purposes.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The logging system in Melody Auth tracks three types of activities:</p><ul><li><strong>Email Logs</strong>: Records all outgoing emails (verification, password reset, MFA, etc.)</li><li><strong>SMS Logs</strong>: Records all SMS messages sent for MFA and verification</li><li><strong>Sign-in Logs</strong>: Records user authentication attempts with IP and geolocation data</li></ul><h2 id="enabling-logs" tabindex="-1"><a class="header-anchor" href="#enabling-logs"><span>Enabling Logs</span></a></h2><p>Logs are disabled by default for privacy and storage considerations. You can enable them individually by configuring the following settings in your <code>server/wrangler.toml</code> file:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">vars</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">ENABLE_EMAIL_LOG</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token key property">ENABLE_SMS_LOG</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token key property">ENABLE_SIGN_IN_LOG</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="accessing-logs" tabindex="-1"><a class="header-anchor" href="#accessing-logs"><span>Accessing Logs</span></a></h2><p>Once logging is enabled, you can access logs through the Admin Panel:</p><ol><li>Navigate to the Admin Panel</li><li>Click on <strong>&quot;Logs&quot;</strong> in the sidebar navigation</li><li>View the different log types based on what you have enabled</li></ol><h2 id="cleaning-old-logs" tabindex="-1"><a class="header-anchor" href="#cleaning-old-logs"><span>Cleaning Old Logs</span></a></h2><p>The Admin Panel provides a &quot;Clean&quot; button for each log type that allows you to:</p><ul><li>Remove logs older than 30 days</li><li>Free up database storage</li><li>Maintain compliance with data retention policies</li></ul><p><strong>Warning:</strong> Log cleanup is a permanent operation that cannot be undone. Always backup your data before cleaning logs.</p><h4 id="to-clean-logs" tabindex="-1"><a class="header-anchor" href="#to-clean-logs"><span>To clean logs:</span></a></h4><ol><li>Navigate to the Logs page in the Admin Panel</li><li>Click the &quot;Clean&quot; button for the desired log type</li><li>Confirm the action in the dialog</li><li>All logs older than 30 days will be permanently deleted</li></ol><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><h3 id="privacy-and-compliance" tabindex="-1"><a class="header-anchor" href="#privacy-and-compliance"><span>Privacy and Compliance</span></a></h3><ul><li><strong>Data Disclosure</strong>: Always disclose data collection in your Privacy Policy</li><li><strong>Regulatory Compliance</strong>: Ensure compliance with GDPR, CCPA, and other applicable regulations</li><li><strong>Retention Policies</strong>: Implement automated cleanup schedules based on your legal requirements</li></ul><h3 id="storage-management" tabindex="-1"><a class="header-anchor" href="#storage-management"><span>Storage Management</span></a></h3><ul><li><strong>Regular Cleanup</strong>: Set up automated cleanup processes to prevent excessive storage usage</li><li><strong>Monitoring</strong>: Monitor log volume and storage consumption</li><li><strong>Archiving</strong>: Consider archiving important logs before cleanup if needed for compliance</li></ul><h2 id="s2s-api-access" tabindex="-1"><a class="header-anchor" href="#s2s-api-access"><span>S2S API Access</span></a></h2><p>Logs can also be accessed programmatically through the S2S API:</p><ul><li><code>GET /api/v1/logs/email</code> - Retrieve email logs</li><li><code>GET /api/v1/logs/sms</code> - Retrieve SMS logs</li><li><code>GET /api/v1/logs/sign-in</code> - Retrieve sign-in logs</li><li><code>DELETE /api/v1/logs/email</code> - Clean email logs</li><li><code>DELETE /api/v1/logs/sms</code> - Clean SMS logs</li><li><code>DELETE /api/v1/logs/sign-in</code> - Clean sign-in logs</li></ul>`,25)]))}const c=e(o,[["render",l]]),g=JSON.parse('{"path":"/log-management.html","title":"Log Management","lang":"en-US","frontmatter":{},"git":{"updatedTime":1755219196000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"48aef26b66375de4db0d1c4e18eeafe5a6ba159a","time":1755219196000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add docs for org groups, user attributes, and log management (#427)"}]},"filePathRelative":"log-management.md"}');export{c as comp,g as data};
