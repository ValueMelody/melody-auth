import{_ as a,c as s,a as e,o as t}from"./app-BPesaNQn.js";const o={};function l(i,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="localization" tabindex="-1"><a class="header-anchor" href="#localization"><span>Localization</span></a></h1><p>This guide explains how to add and use a new locale in Melody Auth for identity pages and email templates.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><ul><li>Default locales: <code>en</code> and <code>fr</code></li><li>Additionally supported: <code>zh</code></li><li>You can add more locales by providing translations and updating configuration</li></ul><h2 id="add-translations-for-email-templates" tabindex="-1"><a class="header-anchor" href="#add-translations-for-email-templates"><span>Add translations for email templates</span></a></h2><p>Provide translations for your new locale in <code>server/src/configs/locale.ts</code>.</p><h2 id="add-translations-for-identity-pages" tabindex="-1"><a class="header-anchor" href="#add-translations-for-identity-pages"><span>Add translations for identity pages</span></a></h2><p>You can add translations for identity pages in <code>server/src/pages/tools/locale.ts</code>.</p><h2 id="allow-the-locale-in-server-config" tabindex="-1"><a class="header-anchor" href="#allow-the-locale-in-server-config"><span>Allow the locale in server config</span></a></h2><p>Update <code>SUPPORTED_LOCALES</code> in <code>server/wrangler.toml</code> under <code>[vars]</code> so the identity pages and emails can use it.</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">vars</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">SUPPORTED_LOCALES</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;de&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># Optional: show a language switcher on identity pages</span></span>
<span class="line"><span class="token key property">ENABLE_LOCALE_SELECTOR</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notes:</p><ul><li>Supported locales mentioned in docs: [&#39;en&#39;, &#39;fr&#39;, &#39;zh&#39;]</li><li>If you include only one locale in <code>SUPPORTED_LOCALES</code>, the selector is hidden even if <code>ENABLE_LOCALE_SELECTOR</code> is true.</li><li>You can remove any locale from <code>SUPPORTED_LOCALES</code> to disable it.</li></ul><h2 id="specify-a-locale-for-the-authentication-flow" tabindex="-1"><a class="header-anchor" href="#specify-a-locale-for-the-authentication-flow"><span>Specify a locale for the authentication flow</span></a></h2><p>You can pass a locale when starting the authentication flow via the SDKs. Example:</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code class="language-tsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@melody-auth/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">LoginButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> loginRedirect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">loginRedirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span> locale<span class="token operator">:</span> <span class="token string">&#39;de&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      Login (DE)</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16)]))}const c=a(o,[["render",l]]),r=JSON.parse('{"path":"/localization.html","title":"Localization","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754954867000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}],"changelog":[{"hash":"8072502fc071765c4d8e2ab6e797919d78d7c086","time":1754954867000,"email":"byn9826@gmail.com","author":"Baozier","message":"Regroup docs (#420)"}]},"filePathRelative":"localization.md"}');export{c as comp,r as data};
