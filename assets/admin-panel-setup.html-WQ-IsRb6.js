import{_ as a,c as n,a as s,o as i}from"./app-h006SE9S.js";const t={};function l(r,e){return i(),n("div",null,e[0]||(e[0]=[s(`<h1 id="admin-panel" tabindex="-1"><a class="header-anchor" href="#admin-panel"><span>Admin Panel</span></a></h1><p>Follow these instructions to set up and run the admin panel locally or in production.</p><h2 id="_1-prerequisites" tabindex="-1"><a class="header-anchor" href="#_1-prerequisites"><span>1. Prerequisites</span></a></h2><p>Complete the auth server setup first.</p><h2 id="_2-get-started" tabindex="-1"><a class="header-anchor" href="#_2-get-started"><span>2. Get Started</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd melody-auth/admin-panel</span>
<span class="line">cp .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-update-the-env-file-with-the-following-variables" tabindex="-1"><a class="header-anchor" href="#_3-update-the-env-file-with-the-following-variables"><span>3. Update the .env file with the following variables:</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">NEXT_PUBLIC_CLIENT_URI: Set this to the host url of your admin panel app</span>
<span class="line">NEXT_PUBLIC_SERVER_URI: Set this to the host url of your auth server.</span>
<span class="line">NEXT_PUBLIC_CLIENT_ID: Client ID for the &quot;Admin Panel (SPA)&quot; app</span>
<span class="line">SERVER_CLIENT_ID: Client ID for the &quot;Admin Panel (S2S)&quot; app</span>
<span class="line">SERVER_CLIENT_SECRET: Client secret for the &quot;Admin Panel (S2S)&quot; app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>For Cloudflare remote/production environment, you can find the necessary information in the Cloudflare dashboard under &quot;Workers &amp; Pages&quot; -&gt; D1 -&gt; Melody Auth database -&gt; app table.</li><li>For Cloudflare local/development environment, use the following command to retrieve app information:<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd melody-auth/server</span>
<span class="line">wrangler d1 execute melody-auth --command=&quot;select * from app&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>For NodeJS environment, check your Postgres melody-auth database -&gt; app table</li></ul><h2 id="_4-start-the-admin-panel-app" tabindex="-1"><a class="header-anchor" href="#_4-start-the-admin-panel-app"><span>4. Start the admin panel app</span></a></h2><p>Start the admin panel app</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd melody-auth/admin-panel</span>
<span class="line">npm install</span>
<span class="line">npm run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="first-time-setup" tabindex="-1"><a class="header-anchor" href="#first-time-setup"><span>First-time Setup</span></a></h3><ol><li>When you first access the admin panel, you&#39;ll be redirected to the auth server login screen. Create a new account.</li><li>After creating an account, you&#39;ll be redirected back to the admin panel with an &quot;super_admin role required&quot; alert. This is expected for new accounts.</li><li>To grant super admin access: <ul><li>For Cloudflare remote/production environment: <ol><li>Go to the Cloudflare dashboard</li><li>Navigate to &quot;Workers &amp; Pages&quot; -&gt; D1 -&gt; Melody Auth database -&gt; user_role table</li><li>Add a new record with userId = 1 and roleId = 1 (assuming you just created the first user)</li></ol></li><li>For Cloudflare local/development environment:<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd melody-auth/server</span>
<span class="line">wrangler d1 execute melody-auth --command=&quot;insert into user_role (userId, roleId) values (1, 1)&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>For NodeJS environment, insert following record to your Postgres melody-auth database:<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">insert into user_role (userId, roleId) values (1, 1)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li>Logout (Required after update user role) and login again. You should now have full access.</li></ol><h3 id="deploy-admin-panel-to-cloudflare-workers" tabindex="-1"><a class="header-anchor" href="#deploy-admin-panel-to-cloudflare-workers"><span>Deploy Admin Panel to Cloudflare Workers</span></a></h3><p>The Admin Panel is a full-stack Next.js application typically deployed in a Node.js environment. Deployment to Cloudflare Workers is now supported via the opennextjs-cloudflare package.</p><p><strong>Note</strong>: Cloudflare Workers cannot call other Workers within the same Cloudflare account, so if you plan to deploy both the Admin Panel and the Auth Server on Cloudflare, you must either assign each Worker a custom domain (e.g., admin.example.com and auth.example.com), or deploy the two Workers under separate Cloudflare accounts to avoid the restriction.</p><p>Steps to Deploy:</p><ol><li><p>Create a new worker named &quot;melody-auth-admin-panel&quot;</p></li><li><p>Go to &quot;melody-auth-admin-panel&quot; Cloudflare Dashboard -&gt; Settings -&gt; Variables and Secrets, add following secrets</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">SERVER_CLIENT_ID=[Client ID for the &quot;Admin Panel (S2S)&quot; app]</span>
<span class="line">SERVER_CLIENT_SECRET=[Client secret for the &quot;Admin Panel (S2S)&quot; app]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>In your project directory, under the /admin-panel folder, create an .env file:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">NEXT_PUBLIC_CLIENT_URI=[The host url of this admin panel worker]</span>
<span class="line">NEXT_PUBLIC_SERVER_URI=[The host url of your auth server]</span>
<span class="line">NEXT_PUBLIC_CLIENT_ID=[Client ID for the &quot;Admin Panel (SPA)&quot; app]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Navigate to &quot;Workers &amp; Pages&quot; -&gt; D1 -&gt; Melody Auth database -&gt; app table</p><ul><li>Update the redirectUris values in &quot;Admin Panel (SPA)&quot; entry with the cloudflare (e.g., https://melody-auth-admin.[your-account-name].workers.dev)</li></ul></li><li><p>Build the project</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">npm run cf:build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Deploy</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">npm run cf:deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="custom-role-access-for-the-admin-panel" tabindex="-1"><a class="header-anchor" href="#custom-role-access-for-the-admin-panel"><span>Custom Role Access for the Admin Panel</span></a></h2><p>By default, the admin panel only accepts logins from the super_admin role. To enable login using a custom role with limited permissions, follow these steps:</p><ol><li>Add your custom role to the <strong>AllowedRoles</strong> array in /admin-panel/tools/access.</li><li>Define the access permissions for your custom role within <strong>RoleAccesses</strong> in /admin-panel/tools/access.</li></ol>`,22)]))}const d=a(t,[["render",l]]),p=JSON.parse('{"path":"/admin-panel-setup.html","title":"Admin Panel","lang":"en-US","frontmatter":{},"git":{"updatedTime":1748744819000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":9,"url":"https://github.com/Baozier"},{"name":"Raph","username":"Raph","email":"raphael.carrier@gmail.com","commits":1,"url":"https://github.com/Raph"}],"changelog":[{"hash":"1f6a42a6b45fdfb25e862e4b91e0a9988ee80459","time":1748744819000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add docs in CN (#378)"},{"hash":"e715c3d05b21d0a9397285846057bcc7c350e1ad","time":1745456406000,"email":"byn9826@gmail.com","author":"Baozier","message":"Update admin-panel doc about worker to worker request limitation (#333)"},{"hash":"393be7f168fa25228fc864f96efdc35ed3032614","time":1743392372000,"email":"byn9826@gmail.com","author":"Baozier","message":"Update docs and screenshots for admin panel (#284)","tag":"v1.2.4"},{"hash":"372e3575950d34d0d90c8f32c3f53ef8dc9c0bd5","time":1742566876000,"email":"raphael.carrier@gmail.com","author":"Raph","message":"Add instructions to update the redirectUri values (#270)"},{"hash":"dab232c28ad153e90129d65b72ad543d428b9685","time":1739055609000,"email":"byn9826@gmail.com","author":"Baozier","message":"Update docs structure (#223)","tag":"v1.1.6"},{"hash":"1a3ec6e349186e1d7dffd395fef5729d57bbbc38","time":1734406388000,"email":"byn9826@gmail.com","author":"Baozier","message":"Support deploy admin panel to Cloudflare workers (#202)"},{"hash":"393a4080f72b4213f00b9c8aabe6f5fd91edc4bd","time":1725585403000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add instruction for mailer and admin panel setup for node version (#142)"},{"hash":"399c25dfb36e1569fab7184ffec2bb9ee8e923e3","time":1722646919000,"email":"byn9826@gmail.com","author":"Baozier","message":"Make server, sdk and admin panel build version usable (#63)"},{"hash":"832c835e808af226800f17555521319d0a22b462","time":1722479983000,"email":"byn9826@gmail.com","author":"Baozier","message":"Assign admin panel s2s app with root scope for simpler migration (#60)"},{"hash":"ac687ff9578b03e2cb0b6cc35ad8c588c44e23c6","time":1722461102000,"email":"byn9826@gmail.com","author":"Baozier","message":"Add docs for sever and admin panel setup (#58)"}]},"filePathRelative":"admin-panel-setup.md"}');export{d as comp,p as data};
